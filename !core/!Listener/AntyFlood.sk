import:
	java.lang.StringBuilder
	java.lang.Character
	pl.kamil0024.Main as L

every 10 minutes:
	delete {v::cache::msg::*}

function levenshtein(s: text, l: text) :: number:
	return L.levenshtein({_s}, {_l})

on guild message received:
	set {_g} to event-member.getGuild().getId()

	if event-member.getGuild().getOwner().getUser().getId() is event-user.getId():
		stop
	if event-user.isBot():
		stop

	set {_mem} to event-member

	set {_msg} to "%event-message%"
	set {_msg} to regex replace all pattern "\w+:\/{2}[\d\w-]+(\.[\d\w-]+)*(?:(?:[^\s/]*))*" with "" in {_msg}
	set {_msg} to regex replace all pattern "<@[!&]?([0-9]{17,18})>" with "" in {_msg}

	loop ...event-message.getMessage().getMentionedMembers():
		add 1 to {_pingiNaWiadomosc}
	if {_pingiNaWiadomosc} >= 5:
		KamilAPI add punish to event-user with reason "Flood/Spam/Caps lock" by getUser({bot::id}) in channel event-channel #FIXME: pun
		stop

	add {_msg} to {v::cache::msg::%event-user.getId()%::*}
	if size of {v::cache::msg::%event-user.getId()%::*} >= 4:
		set {_size} to size of {v::cache::msg::%event-user.getId()%::*}
		loop 4 times:
			add {v::cache::msg::%event-user.getId()%::%{_size}%} to {_msgs::*}
			remove 1 from {_size}

		set {_size} to size of {_msgs::*}
		loop size of {_msgs::*} times:
			if {_size} = 1:
				stop loop

			set {_x::msg::1} to {_msgs::%{_size}%}

			set {_kesz} to {_size}-1
			set {_x::msg::2} to {_msgs::%{_kesz}%}

			add levenshtein("%{_x::msg::1}%", "%{_x::msg::2}%") to {_levenshtein::*}
			remove 1 from {_size}

		loop {_levenshtein::*}:
			add loop-value to {_suma}

		set {_int} to size of {_levenshtein::*}
		set {_srednia} to {_suma}/{_int}
		if {_srednia} <= 1.5:
			#KamilAPI add punish to event-user with reason "Flood/Spam/Caps lock" by getUser({bot::id}) in channel event-channel #FIXME: pun
		reply with "Srednia: %{_srednia}% (%{_suma}%/%{_int}%)%nl%Levenshtein: %{_levenshtein::*}%"