import:
	java.text.SimpleDateFormat

function updateUrlopMessages():
	execute "SELECT * FROM nieobecnosci WHERE aktywna='true'" in {bot::sql} and store result in {_r::*}

	loop {_r::msgId}:
		set {_inx} to loop-index
		retrieve message with id "%loop-value%" from channel with id getConfig("Config.nieobecnosci")
		set {_msg} to last retrieved message

		loop "user", "start", "end", "powod":
			set {_%loop-value-2%} to {_r::%loop-value-2%::%{_inx}%}

		loop {_end}, {_start}:
			add 1 to {_num}
			set {_date::%{_num}%} to unix date ("%loop-value-2%" parsed as number) as date
		delete {_num}
		set {_dif} to getTimespan("%difference between {_date::1} and {_date::2}%")
		
		create embed:
			set the colour of the embed to blue
			
			set the author info of the embed to author named getName({_user}) with no url and icon "%avatar of getUser({_user})%"
			
			add field named "Powód:" with value "%{_powod}%" to embed
			add field named "Czas rozpoczęcia:" with value "%{_date::1}%" to embed
			add field named "Czas zakończenia:" with value "%{_date::2}%" to embed
			add field named "Pozostało czasu:" with value {_dif} to embed
			
			set the thumbnail of embed to "%avatar of getUser({_user})%"

		send last created embed to channel with id getConfig("Config.nieobecnosci") with {bot::name} and store it in {_msg}

function createNieobecnosc(user: text, powod: object, start: object, end: object):
	loop {_start}.getTime(), {_end}.getTime():
		set {_loop::mil} to loop-value
		add 1 to {_num}

		set {_date::%{_num}%} to unix date ("%{_loop::mil}%" parsed as number) as date
		delete {_loop::*} # Usuwanie zmiennych tymczasowych, nice
	
	set {_dif} to getTimespan("%difference between {_date::1} and {_date::2}%")

	# Zamieniamy wszystko na texta
	
	set {_t::start} to "%{_start}.getTime()%"
	set {_t::end} to "%{_end}.getTime()%"
	set {_t::powod} to "%{_powod}%"

	create embed:
		set the colour of the embed to blue
		
		set the author info of the embed to author named getName({_user}) with no url and icon "%avatar of getUser({_user})%"
		
		add field named "Powód:" with value "%{_t::powod}%" to embed
		add field named "Czas rozpoczęcia:" with value "%{_date::1}%" to embed
		add field named "Czas zakończenia:" with value "%{_date::2}%" to embed
		add field named "Pozostało czasu:" with value {_dif} to embed
		
		set the thumbnail of embed to "%avatar of getUser({_user})%"

	send last created embed to channel with id getConfig("Config.nieobecnosci") with {bot::name} and store it in {_msg}

	set {_t::msgId} to {_msg}.getID()

	execute "INSERT INTO `nieobecnosci` (id,msgId,start,end,aktywna,powod) VALUES(%{_user}%, %{_t::msgId}%, %{_t::start}%, %{_t::msgId}%, 'true', %{_t::powod}%)" in {bot::sql}
	log("%last sql error%")

on guild message receive:
	if event-channel.getId() is getConfig("Config.nieobecnosci"):

		execute "SELECT id FROM nieobecnosci WHERE id=%event-user.getId()% AND aktywna='true'" in {bot::sql} and store result in {_r::*}
		if {_r::id::1} is set:
			reply with "Masz już urlop! Jeżeli chcesz przedłużyć napisz `Przedłużam: <nowa data>`" and store it in {_msg}
			deleteMessage({_msg}, 10)
			deleteMessage(event-message, 10)
			stop

		set {_msg} to event-message
		set {_Tmsg} to "%{_msg}%"
		
		set {_s::*} to {_Tmsg} split at nl
		
		# 1 Data rozpoczęcia
		# 2 Powód
		# 3 Data zakończenia

		loop 3 times:
			set {_x} to last element of ({_s::%loop-value%} split at ":")
			if loop-value != 2:
				replace all " " with "" in {_x}
			set {_f::%loop-value%} to {_x}
			delete {_x} # Tak, czasami trzeba usunąć zmienne tymczasowe xD


		set {_format} to new SimpleDateFormat("dd-MM-yyyy")

		set {_e::start} to {_format}.parse({_f::1})
		set {_e::end} to {_format}.parse({_f::3})

		set {_e::powod} to {_f::2}

		loop "start", "end", "powod":
			if "%{_e::%loop-value%}%" is "<none>":

				if loop-value is "start":
					set {_e} to "Data rozpoczęcia jest zła. Format to `dzień-miesiąc-rok` (05-02-2020)"
				if loop-value is "end":
					set {_e} to "Data zakończenia jest zła"
				if loop-value is "powod":
					set {_e} to "powód jakimś cudem jest pusty xd"

				reply with "%getMention(event-user.getId())%, %{_e}% (skopiuj swoją wiadomość, zostanie ona usunięta za 10 sek.)" and store it in {_msg}
				deleteMessage(event-message, 15)
				deleteMessage({_msg}, 10)
				stop 

		if {_e::start} > {_e::end}:
			reply with "%getMention(event-user.getId())%, czy mi się zdaje, że data zakończenia jest wcześniejsza od daty rozpoczęcia?" and store it in {_msg}
			deleteMessage({_msg}, 10)

		createNieobecnosc(event-user.getId(), {_e::powod}, {_e::start}, {_e::end})
		deleteMessage(event-message)