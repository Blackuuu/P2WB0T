effect KamilAPI add %number% xp to %text% with %text%:
	trigger:
		set {_num} to expr-1
		set {_id} to expr-2

		set {_msg} to expr-3
		set {_msg} to regex replace all pattern "<(a?):(\w{2,32}):(\w{2,100})>" with "" in {_msg}
		set {_msg} to regex replace all pattern "[^\w\s]*" with "" in {_msg}
		set {_msg} to regex replace all pattern "\w+:\/{2}[\d\w-]+(\.[\d\w-]+)*(?:(?:[^\s/]*))*" with "" in {_msg}
		set {_msg} to regex replace all pattern "<@!?([0-9])*>" with "" in {_msg}

		if {_num} is not set:
			stop
		if {_id} is not set:
			stop

		set {_num} to {_num} + (rounded down {_msg}.length() / 80)

		set {_num} to "%{_num}%"
		if {vv::%{_id}%::xplistener} is not true:
			execute "SELECT xp FROM xp WHERE id=%unsafe {_id}%" in {bot::sql} and store result in {_k::*}
			set {_null} to last element of {_k::xp::*}
			if {_null} is not set:
				execute "INSERT INTO `xp` (id,xp) VALUES(%unsafe {_id}%, %unsafe {_num}%)" in {bot::sql}
				stop
			set {vv::%{_id}%::xplistener} to true
		log("update")
		execute "SELECT xp FROM xp WHERE id=%unsafe {_id}%" in {bot::sql} and store result in {_r::*}
		set {_curretXp} to last element of {_r::xp::*}
		set {_curretXp} to {_curretXp} parsed as number
		set {_num} to {_num} parsed as number
		set {_num} to "%{_curretXp}+{_num}%"
		execute "UPDATE xp SET xp=%unsafe {_num}% WHERE id=%unsafe {_id}%" in {bot::sql}

effect KamilAPI remove %number% xp from %text%:
	trigger:
		set {_num} to expr-1
		set {_id} to expr-2

		if {_num} is not set:
			stop
		if {_id} is not set:
			stop

		execute "SELECT xp FROM xp WHERE id=%unsafe {_id}%" in {bot::sql} and store result in {_r::*}
		set {_curretXp} to last element of {_r::xp::*}
		set {_curretXp} to {_curretXp} parsed as number
		set {_num} to {_num} parsed as number
		set {_num} to "%{_curretXp}-{_num}%"
		execute "UPDATE xp SET xp='%unsafe {_num}%' WHERE id=%unsafe {_id}%" in {bot::sql}

on guild message receive:
	event-user.getId() is "343467373417857025"
	if event-user.isBot() is false:

		set {_w} to difference between {vv::%event-user.getId()%::xplistener::cooldown} and now
		if {_w} is less than 3 minute:
			set {_Xwefwrg} to ""
		else:
			set {vv::%event-user.getId()%::xplistener::cooldown} to now
			set {_num} to rounded down random number between 1 and 15
			KamilAPI add {_num} xp to event-user.getId() with "%event-message%"

on message delete:
	discord id of author of event-message is "343467373417857025"
	if bot state of author of event-message is false:
		set {_num} to rounded down random number between 8 and 20
		send a "GET" request to "http://kamil0024.me:1234/api/supertajnytoken/message/%discord id of event-message%"
		map json body of last http response to {_r::*}
		set {_num} to {_num} + (rounded up {_r::content}.length() / 70)
		KamilAPI remove {_num} xp from discord id of author of event-message
