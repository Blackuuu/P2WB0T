import:
	org.bukkit.Server
	org.bukkit.Bukkit

on script load:
	delete {bot::*}
	delete {v::*}
	wait 10 tick

	set {_bukkit} to Bukkit.getServer()
	set {_manager} to {_bukkit}.getPluginManager()

	if {_manager}.getPlugin("Vixio") is not set:
		log("&cPlugin Vixio nie zostal znaleziony! Nic nie bedzie dzialac.")
		stop

	if file "plugins/Bot/config.yml" doesn't exist:
		log("Nie ma configu!")
		set {_f} to "plugins/Bot/config.example.yml"
		create file {_f}

		set yml value "Mysql.link" from file {_f} to "!mysql://localhost:3306/ (ofc usun wszedzie te ""!"")"
		set yml value "Mysql.database" from file {_f} to "!Nazwa database (bazy danych)"
		set yml value "Mysql.user" from file {_f} to "!Nazwa uzytkownika"
		set yml value "Mysql.pass" from file {_f} to "!Haslo (jezeli nie ma wpisz ""<none>"")"

		set yml value "Bot.token" from file {_f} to "!Token Bota"
		set yml value "Bot.id" from file {_f} to "!ID Bota"
		set yml value "Bot.name" from file {_f} to "!Nazwa Bota"
		set yml value "Bot.prefix" from file {_f} to "!Prefix Bota"

		set yml value "Config.guild" from file {_f} to "!ID glownego serwera"
		set yml value "Config.modlogi" from file {_f} to "!ID kanalu do mod-logow"

		set yml value "Config.muterole" from file {_f} to "!ID roli, ktora bedzie nadawana jak osoba dostnie muta"
		set yml value "Config.nieobecnosci" from file {_f} to "!ID kanalu do nieobecnosci"
		set yml value "Config.nieobecnosciLogi" from file {_f} to "!Logi do nieobecnosci"

		set yml value "Config.pomocnik" from file {_f} to "!ID roli, ktora bedzie miala poziom 1"
		set yml value "Config.mod" from file {_f} to "!ID roli, ktora bedzie miala poziom 2"
		set yml value "Config.adm" from file {_f} to "!ID roli, ktora bedzie miala poziom 3"

		set yml value "Config.logiKomend" from file {_f} to "!ID kanalu do logow komend"
		set yml value "Config.logiSerwera" from file {_f} to "!ID kanalu z logami serwera"
		set yml value "Config.logiWiadomosci" from file {_f} to "!ID kanaly z logami wiadomosci"

		set yml value "emote.green" from file {_f} to "!ID emotki green"
		set yml value "emote.red" from file {_f} to "!ID emotki red"
		set yml value "emote.loading" from file {_f} to "!ID emotki red"

		loop 2 times:
			add "!ID ownera%loop-value% (owner ma wszystkie permy)" to yml list "Config.owners" from file "plugins/Bot/config.example.yml"

		log("Stworzono config! Skonfiguruj plugins/Bot/config.example.yml do swoich potrzec i przeladuj jeszcze raz skrypt!")
		stop
	
	if file "plugins/Bot/guildConfig.yml" doesn't exist:
		log("Nie ma configu serwera!")
		set {_f} to "plugins/Bot/guildConfig.yml"
		create file {_f}
		
		set {_gc::1::name} to "Komendy są włączone"
		set {_gc::1::type} to "value"
		set {_gc::1::value} to "true"
		set {_gc::1::valueType} to "boolean"

		set {_gc::2::name} to "Kanaly, na ktorych nie dzialaja komendy"
		set {_gc::2::type} to "list"
		set {_gc::2::valueType} to "TextChannel"
		set {_gc::2::value} to "kanal1,kanal2,kanal3"

		loop (size of {_gc::*}) times:
			set {_inx} to loop-value
			loop {_gc::%{_inx}%::*}:
				if loop-index is not "value":
					set yml value "Config.%{_inx}%.%loop-index%" from file {_f} to loop-value-2
				else:
					if {_gc::%{_inx}%::type} is "value":
						set yml value "Config.%{_inx}%.%loop-index%" from file {_f} to loop-value-2
					if {_gc::%{_inx}%::type} is "list":
						set {_v} to "%loop-value-2%"
						set {_values::*} to {_v} split at ","
						loop {_values::*}:
							add "%loop-value-3%" to yml list "Config.%{_inx}%.%loop-index-1%" from file "plugins/Bot/guildConfig.yml"

		log("Stworzono config serwera! Skonfiguruj plugins/Bot/guildConfig.yml do swoich potrzec.")

	set {bot::name} to getConfig("Bot.name")
	set {bot::id} to getConfig("Bot.id")
	set {bot::guild} to getConfig("Config.guild")
	set {bot::prefix} to getConfig("Bot.prefix")
	set {bot::token} to getConfig("Bot.token")

	log("&eLacze z baza danych MySQL...")
	loop "link", "database", "user", "pass":
		set {_db::%loop-value%} to yml value "Mysql.%loop-value%" from file "plugins/Bot/config.yml"

	set {_m} to "%{_db::link}%%{_db::database}%?user=%{_db::user}%"
	if {_db::pass} contains "<none>":
		set {bot::sql} to the database "%{_m}%&useSSL=false"
		set {_db::pass} to "Brak"
	else:
		set {bot::sql} to the database "%{_m}%&password=%{_db::pass}%&useSSL=false"

	log("%{bot::sql}%")
	log("&eKonfiguruje baze danych...")

	execute "CREATE TABLE IF NOT EXISTS %unsafe {_db::database}%.`akcje` ( `id` TEXT NOT NULL , `karany` TEXT NOT NULL , `nick` TEXT NOT NULL , `adm` TEXT NOT NULL , `typ` TEXT NOT NULL , `powod` TEXT NOT NULL , `now` TEXT NOT NULL , `aktywna` TEXT NOT NULL , `czas` TEXT NULL DEFAULT NULL , `end` TEXT NULL DEFAULT NULL ) ENGINE = InnoDB" in {bot::sql}
	execute "CREATE TABLE IF NOT EXISTS %unsafe {_db::database}%.`playlisty` (`user` TEXT NOT NULL , `name` TEXT NOT NULL, `link` TEXT NOT NULL , `title` TEXT NOT NULL ) ENGINE = InnoDB" in {bot::sql}
	execute "CREATE TABLE IF NOT EXISTS %unsafe {_db::database}%.`konkurs` ( `id` TEXT NOT NULL , `nagroda` TEXT NOT NULL , `kanal` TEXT NOT NULL, `messageId` TEXT NOT NULL , `sender` TEXT NOT NULL, `now` TEXT NOT NULL , `koniec` TEXT NOT NULL , `aktywna` TEXT NOT NULL ) ENGINE = InnoDB" in {bot::sql}
	execute "CREATE TABLE IF NOT EXISTS %unsafe {_db::database}%.`config` ( `id` TEXT NOT NULL , `green` TEXT NOT NULL , `red` TEXT NOT NULL , `deleteMessage` TEXT NULL DEFAULT NULL ) ENGINE = InnoDB" in {bot::sql}
	execute "CREATE TABLE IF NOT EXISTS %unsafe {_db::database}%.`nieobecnosci` ( `id` TEXT NOT NULL , `msgId` TEXT NOT NULL , `start` TEXT NOT NULL , `end` TEXT NOT NULL , `aktywna` TEXT NOT NULL, `powod` TEXT NOT NULL ) ENGINE = InnoDB" in {bot::sql}
	execute "CREATE TABLE IF NOT EXISTS %unsafe {_db::database}%.`remind` ( `id` TEXT NOT NULL , `remindid` TEXT NOT NULL, `end` TEXT NOT NULL, `powod` TEXT NOT NULL ) ENGINE = InnoDB" in {bot::sql}

	set {_er} to last sql error
	if {_er} is set:
		log("&cWystapil blad podczas logownia do bazy MySQL! &7(%{_er}%)")
		stop
	else:
		log("&aPoprawnie podlaczono do bazy danych.")

	log("&eLoguje Bota..")

	login to "%{bot::token}%" with the name "%{bot::name}%"
	delete {bot::token}
	set {_e} to last vixio error

	set {_msg} to check "%{_e}%" = "<none>" : "&aPomyslnie zalogowano bota! Milego korzystania :D" ? "Nie udalo sie zalogowac Bota! &r%{_e}%"
	log({_msg})

	set {_bot} to "%{bot::name}%" parsed as bot
	set {bot::helpmention} to "%mention tag of {_bot}% "
	
	delete {bot::status}
	setCustomStatus()