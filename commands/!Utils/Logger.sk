# import:
# 	me.iblitzkriegi.vixio.util.UpdatingMessage as Updessage

# function getLastAuditLogs(typ: text) :: object:
# 	set {_g} to getGuild()
# 	loop ...{_g}.retrieveAuditLogs().cache(false):
# 		set {_v} to loop-value
# 		if "%{_v}.getType()%" is {_typ}:
# 			return {_v}

# on guild message receive:
# 	set {v::messageCache::%discord id of event-message%} to event-message

# on message delete:
# 	set {_test} to getLastAuditLogs("MESSAGE_DELETE")
# 	set {_id} to event.getJDAEvent().getMessageId()

# 	set {_msg} to "Nie udało się wyciągnąć wiadomości."
# 	set {_msg} to {v::messageCache::%discord id of event-message%}
# 	set {_author} to getFullName({_msg}.getMessage().getAuthor().getId())
# 	if {_author} is not set:
# 		set {_author} to "Najprawdopodobniej bot, lub webhook."

# 	create embed:
# 		set the colour of the embed to red
# 		set the timestamp of embed to now
# 		set the footer of embed to footer with text "Wiadomość usunięta"
	
# 		add field named "Treść wiadomości:" with value "%{_msg}%" to embed
# 		add field named "Autor wiadomości:" with value {_author} to embed
# 		add field named "Kanał:" with value "<##%event-channel.getId()%> (%event-channel.getName()%[%event-channel.getId()%])" to embed
# 		add field named "ID wiadomości:" with value "%{_id}%" to embed
# 		add field named "Usunięte przez:" with value "%getMention({_test}.getUser().getId())%(%getName({_test}.getUser().getId())%)" to embed
	
# 	set {_l} to last created embed
# 	send {_l} to channel with id getConfig("Config.logi") with {bot::name}
# 	delete {v::messageCache::%discord id of event-message%}



# TODO: wyrzucenia z serwera, zbanowania typa, unbana typa

import:
	java.time.OffsetDateTime
	me.iblitzkriegi.vixio.util.UpdatingMessage

function createEmbed(footer: text, field: texts, value: texts) :: embed:
	create embed:
		set the colour of the embed to red
		set the timestamp of embed to now
		set the footer of embed to footer with text {_footer}

		loop size of {_field::*} times:
			add field named {_field::%loop-value%} with value {_value::%loop-value%} to embed
	return last created embed

on message delete:
	set {_m} to UpdatingMessage.getUpdatingMessage(discord id of event-message)

	set {_g} to event-guild
	loop ...{_g}.retrieveAuditLogs().cache(false):
		set {_v} to loop-value
		if "%{_v}.getType()%".equals("MESSAGE_DELETE"):
			# TODO: Dodaj ifa {_v}.getTimeCreated().isAfter(OffsetDateTime.now().minusMinutes(1)
			
			set {_name} to getFullName((author of event-message).getId())
			if {_name} contains "<none>":
				set {_name} to "Nie udało się uzyskać."

			set {_sender} to "Najprawdopodobniej autor wiadomości, lub jakiś bot."
			set {_sender} to getFullName({_v}.getUser().getId())

			if ...{_m}.getMessage().getEmbeds() is not set:
				set {_tresc} to "%{_m}%"
			else:
				set {_tresc} to "Zawiera embed. Patrz poniżej."

			set {_embed} to createEmbed("Wiadomość usunięta.", ("Autor", "(Prawdopodobnie) Usunięte przez", "Kanał", "Treść wiadomości"), ({_name}, {_sender}, "<##%event-channel.getId()%>(##%event-channel%)[%event-channel.getId()%]", {_tresc}))
			send {_embed} to channel with id getConfig("Config.logiSerwera") with event-bot

			if ...{_m}.getMessage().getEmbeds() is set:
				send {_m} to channel with id getConfig("Config.logiSerwera") with event-bot
			stop
		