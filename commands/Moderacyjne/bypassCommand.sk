options:
	cmd: bypass

on script load:
	set {command::{@cmd}::poziom} to 3
	set {command::{@cmd}::cooldown} to 0 seconds

	set {command::{@cmd}::opis} to "Dla osób, które lubią omijać bana/muta"
	set {command::{@cmd}::kategoria} to "Moderacyjne"
	set {command::{@cmd}::uzycie} to "bypass <osoba karana> <jej wcześniejsze konto>"

import:
	java.text.SimpleDateFormat

discord command {@cmd} [<text>] [<text>] [<text>]:
	prefixes: "%{bot::prefix}%", "%{bot::helpmention}%" 
	trigger:
		
		set {_u::1} to getUser(arg-1)
		set {_u::2} to getUser(arg-2)
		if {_u::1} is not set:
			KamilAPI cmd error "Nie ma takiej osoby karanej! Użyj: %{bot::prefix}%%{command::{@cmd}::uzycie}%" to event-message
		if {_u::2} is not set:
			KamilAPI cmd error "Takie mk nie istnieje! Użyj: %{bot::prefix}%%{command::{@cmd}::uzycie}%" to event-message
		
		execute "SELECT * FROM akcje WHERE typ!='Pun' AND typ!='Unmute' AND typ!='Unban' AND typ!='Kick' AND typ!='Warn' AND aktywna='Tak' AND karany='%unsafe {_u::2}.getId()%'" in {bot::sql} and store result in {_r::*}
		loop {_r::id::*}:
			set {_inx} to loop-index
			set {_stary::typ} to {_r::typ::%{_inx}%}
			set {_stary::end} to unix date ("%{_r::end::%{_inx}%}%" parsed as number) as date
			set {_stary::czas} to "%{_r::czas::%{_inx}%}%" parsed as timespan
			set {_stary::now} to "%{_r::now::%{_inx}%}%"
		if {_stary::typ} is not set:
			KamilAPI cmd error "Typ nie ma żadnej aktywnej kary lol" to event-message
		set {_now} to now
		add {_stary::czas} to {_now}
		add {_stary::czas} to {_now}
		set {_dif} to difference between now and {_now}
		if "%{_dif}%" is "<none>":
			set {_dif} to "-"

		set {_powod} to "Celowe wykorzystywanie błędów aplikacji Discord lub luk w uprawnieniach serwerowych"
		set {_xd} to getTimespan("%{_dif}%")

		send "Hey :wave:%nl%Właśnie dostałeś(-aś) karę **%{_stary::typ}%** na czas **%{_xd}%** z powodem **%{_powod}%**%nl%%nl%Czas nadania: **%now%**%nl%--------------------------------------------------" to {_u::1}.getUser() with {bot::name}
		send "Hey :wave:%nl%Właśnie dostałeś(-aś) karę **%{_stary::typ}%** na czas **%{_xd}%** z powodem **%{_powod}%**%nl%%nl%Czas nadania: **%now%**%nl%--------------------------------------------------" to {_u::2}.getUser() with {bot::name}
		
		reply with "%{_stary::typ}% | %{_dif}%"
		if {_stary::typ} is "Ban":
			KamilAPI ban {_u::2} with reason {_powod} by event-user jpg {_jpg}
			wait 30 tick
			KamilAPI ban {_u::1} with reason {_powod} by event-user jpg {_jpg}
		if {_stary::typ} is "Tempmute":
			KamilAPI tempmute {_u::2} with reason {_powod} in time "%{_dif}%" by event-user jpg {_jpg}
			wait 30 tick
			KamilAPI tempmute {_u::1} with reason {_powod} in time "%{_dif}%" by event-user jpg {_jpg}
		if {_stary::typ} is "Tempban":
			KamilAPI tempban {_u::2} with reason {_powod} in time "%{_dif}%" by event-user jpg {_jpg}
			wait 30 tick
			KamilAPI tempban {_u::1} with reason {_powod} in time "%{_dif}%" by event-user jpg {_jpg}
		if {_stary::typ} is "Mute":
			KamilAPI mute {_u::2} with reason {_powod} by event-user
			wait 30 tick
			KamilAPI mute {_u::1} with reason {_powod} by event-user
		
		if {_error} is set:
			reply with "Wystąpił błąd! `%{_error}%`"
		else:
			reply with "Daje kare **%{_stary::typ}%** dla użytkownika **%getUser({_u::1}.getUser().getId())%** na czas **%{_xd}%**!"	
		
		KamilAPI add emote "green" to event-message of event-user