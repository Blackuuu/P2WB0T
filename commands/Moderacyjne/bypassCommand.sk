options:
	cmd: bypass

on script load:
	set {command::{@cmd}::poziom} to 3
	set {command::{@cmd}::cooldown} to 0 seconds

	set {command::{@cmd}::opis} to "Dla osób, które lubią omijać bana/muta"
	set {command::{@cmd}::kategoria} to "Moderacyjne"
	set {command::{@cmd}::uzycie} to "bypass <osoba karana> <jej wcześniejsze konto>"

import:
	java.text.SimpleDateFormat

discord command {@cmd} [<text>] [<text>] [<text>]:
	prefixes: "%{bot::prefix}%", "%{bot::helpmention}%" 
	trigger:
		
		set {_u::1} to getUser(arg-1)
		set {_u::2} to getUser(arg-2)
		if {_u::1} is not set:
			KamilAPI cmd error "Nie ma takiej osoby karanej! Użyj: %{bot::prefix}%%{command::{@cmd}::uzycie}%" to event-message
		if {_u::2} is not set:
			KamilAPI cmd error "Takie mk nie istnieje! Użyj: %{bot::prefix}%%{command::{@cmd}::uzycie}%" to event-message
		
		execute "SELECT * FROM akcje WHERE typ!='Pun' AND typ!='Unmute' AND typ!='Unban' AND typ!='Kick' AND typ!='Warn' AND aktywna='Tak' AND karany='%unsafe {_u::2}.getId()%'" in {bot::sql} and store result in {_r::*}
		loop {_r::id::*}:
			set {_inx} to loop-index
			set {_stary::typ} to {_r::typ::%{_inx}%}
			set {_stary::end} to unix date ("%{_r::end::%{_inx}%}%" parsed as number) as date
			set {_stary::czas} to "%{_r::czas::%{_inx}%}%" parsed as timespan
			set {_stary::now} to "%{_r::now::%{_inx}%}%"

		set {_pozostalo} to difference between now and {_stary::czas}

		set {_k} to new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse({_stary::now})
		set {_stary::now} to new Date({_k}.getTime())

		reply with "Typ dubluje kare przez mk (%{_u::1}%) kare `%{_stary::typ}%` o godzinie `%{_stary::now}%`. Konczy sie o `%{_stary::end}%`. Typ dostał karę na %{_stary::czas}%"

		KamilAPI add emote "green" to event-message of event-user