options:
	cmd: queue

on script load:
	set {command::{@cmd}::poziom} to 0
	set {command::{@cmd}::cooldown} to 0 seconds

function queue(u: member, n: number) :: embed:

	set {_g} to guild with id {bot::guild}
	if {_n} is not 0:
		loop queue of {bot::name} in {_g}:
			add 1 to {_num}
			if {_n} is {_num}:
				set {_yt} to loop-value
				stop loop
	else:
		set {_yt} to track {bot::name} is playing in {_g}

	create embed:

		set the colour of the embed to color of getColor({_u}) 
		add split field named "Nazwa:" with value "[%{_yt}%](%url of {_yt}%)" to embed
		add field named "Autor:" with value authors of {_yt} to embed
		add split field named "D≈Çugo≈õƒá:" with value getTimespan("%duration of {_yt}%") to embed

		if {_n} is 0:
			add split field named "Pozosta≈Ço:" with value getTimespan("%difference between position of {_yt} and duration of {_yt}%") to embed
		set the image of embed to "https://i.ytimg.com/vi_webp/%last element of (url of {_yt} split at ""="")%/sddefault.webp"

		if {_n} is 0:
			set the footer of embed to footer with text "Aktualnie grane! (%{_n}%/%size of queue of {bot::name} in {_g}%)"
		else:
			set the footer of embed to footer with text "(%{_n}%/%size of queue of {bot::name} in {_g}%)"

		set the timestamp of embed to now
	set {_e} to last created embed
	return {_e}

discord command {@cmd} [<text>] [<number>]:
	aliases: kolejka, q, quene,
	prefixes: "%{bot::prefix}%", "%mention tag of event-bot%"
	trigger:
		if arg-1 is not set:
			if event-bot is not playing:
				if queue of event-bot in event-guild is not set:
					KamilAPI command error "Nic nie gram!" to event-message

			delete {v::%event-user.getId()%::queue::*}
			KamilAPI add emote "green" to event-message
			set {_q} to queue(event-member, 0)
			reply with {_q} and store it in {_msg}
			set {_r::*} to queue of event-bot in event-guild
			if size of {_r::*} != 0:
				set {v::%event-user.getId()%::queue::botmsg} to {_msg}
				set {v::%event-user.getId()%::queue::strona} to 0
				loop "‚èÆ", "‚óÄ", "‚èπ", "‚ñ∂", "‚è≠", "üî¢":
					add reaction "%loop-value%" to random message out of {_msg}

		if arg-1 is "reset":
			if queue of event-bot in event-guild is set:
				reset queue of event-bot in event-guild
				KamilAPI add emote "green" to event-message
				reply with "Usuniƒôto wszystkie utwory w kolejki."
			else:
				KamilAPI command error "Kolejka jest pusta" to event-message

		if arg-1 is "remove":
			if queue of event-bot in event-guild is not set:
				KamilAPI command error "Kolejka jest pusta" to event-message
			if arg-2 is not set:
				KamilAPI command error "U≈ºyj: %{bot::prefix}%quene (reset|remove) (numer piosenki)" to event-message
			set {_q::*} to queue of event-bot in event-guild
			if arg-2 is between 1 and size of {_q::*}:
				KamilAPI add emote "green" to event-message
				reply with "Usuwam **`%{_q::%arg-2%}%`** z kolejki"
				reset queue of event-bot in event-guild
				loop {_q::*}:
					add 1 to {_num}
					if {_num} is not arg-2:
						play loop-value
			else:
				KamilAPI command error "Nie ma takiego numeru w kolejce!" to event-message


on reaction add:
	{v::%event-user.getId()%::queue::botmsg} is event-message
	set {_e} to "%event-emote%"
	remove event-emote added by event-user from event-message

	set {_queue::*} to queue of event-bot in event-guild
	if {_e} is "‚èÆ":
		set {_strona} to 0
	if {_e} is "‚è≠":
		set {_strona} to size of {_queue::*}

	if {_e} is "‚óÄ":
		set {_strona} to {v::%event-user.getId()%::queue::strona} - 1
	if {_e} is "‚ñ∂":
		set {_strona} to {v::%event-user.getId()%::queue::strona} + 1

	if {_e} is "‚èπ":
		delete {v::%event-user.getId()%::queue::*}
		KamilAPI clear reaction from event-message
		stop
	
	if {_e} is "üî¢":
		reply with "Napisz numer strony do kt√≥rej chcesz przej≈õƒá..." and store it in {v::%event-user.getId()%::queue::xD:msg}
		set {v::%event-user.getId()%::queue::1234} to true
		stop

	if {_strona} is between 0 and size of {_queue::*}:
		set {_q} to queue(event-member, {_strona})
		edit {v::%event-user.getId()%::queue::botmsg} to show {_q}
		set {v::%event-user.getId()%::queue::strona} to {_strona}

on guild message received:
	if {v::%event-user.getId()%::queue::1234} is true:
		set {_msg} to "%event-message%" parsed as number
		set {_queue::*} to queue of event-bot in event-guild

		delete event-message
		deleteMessage({v::%event-user.getId()%::queue::xD:msg}, 0)

		if {_msg} is between 0 and size of {_queue::*}:
			set {_q} to queue(event-member, {_msg})
			edit {v::%event-user.getId()%::queue::botmsg} to show {_q}
			set {v::%event-user.getId()%::queue::strona} to {_msg}

		delete {v::%event-user.getId()%::queue::xD:msg}
		delete {v::%event-user.getId()%::queue::1234}